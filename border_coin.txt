
# FUNCTION: PAINT_BORDER_COIN
	# Registers Used
		# $s0: stores current color value
		# $s1: temporary memory address storage for current unit (in bitmap)
		# $s2: row index for 'for loop' LOOP_BORDER_COIN_ROW
		# $s3: column index for 'for loop' LOOP_BORDER_COIN_COLUMN
		# $s4: parameter for subfunction LOOP_BORDER_COIN_COLUMN
PAINT_BORDER_COIN:
	    # Store used registers in the stack
	    push_reg_to_stack ($ra)
	    push_reg_to_stack ($s0)
	    push_reg_to_stack ($s1)
	    push_reg_to_stack ($s2)
	    push_reg_to_stack ($s3)
	    push_reg_to_stack ($s4)
    
	    # Initialize registers
	    add $s0, $0, $0				# initialize current color to black
	    add $s1, $0, $0				# holds temporary memory address
	    add $s2, $0, $0	
	    add $s3, $0, $0
	    add $s4, $0, $0

		LOOP_BORDER_COIN_ROW: bge $s2, row_max, EXIT_PAINT_BORDER_COIN
				# Boolean Expressions: Paint in based on row index
			BORDER_COIN_COND:
					beq $s2, 0, BORDER_COIN_ROW_0
					beq $s2, 1024, BORDER_COIN_ROW_1
					beq $s2, 2048, BORDER_COIN_ROW_2
					beq $s2, 3072, BORDER_COIN_ROW_3
					beq $s2, 4096, BORDER_COIN_ROW_4
					beq $s2, 5120, BORDER_COIN_ROW_5
					beq $s2, 6144, BORDER_COIN_ROW_6
					beq $s2, 7168, BORDER_COIN_ROW_7
					beq $s2, 8192, BORDER_COIN_ROW_8

					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_0:
					setup_general_paint (0x868686, 0, 8, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x494900, 8, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb9b900, 12, 16, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xbaba00, 16, 24, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x5c5c37, 24, 28, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_1:
					setup_general_paint (0x868686, 0, 4, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x535300, 4, 8, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb8b800, 8, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x939300, 12, 16, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x5d5d00, 16, 20, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x8f8f16, 20, 24, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xd8d854, 24, 28, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xd1d15c, 28, 32, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_2:
					setup_general_paint (0x868686, 0, 4, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb9b900, 4, 8, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x979700, 8, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x40403a, 12, 16, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 16, 20, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x4c4c46, 20, 24, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xaaa900, 24, 28, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xe1e0a6, 28, 32, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x717131, 32, 36, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_3:
					setup_general_paint (0x5f5f00, 0, 4, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb9b900, 4, 8, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x494900, 8, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 12, 24, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x5e5e00, 24, 28, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xbaba00, 28, 32, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x787854, 32, 36, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 36, 44, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xffffff, 44, 48, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 48, 52, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xffffff, 52, 56, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_4:
					setup_general_paint (0x5e5f00, 0, 4, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb9b900, 4, 8, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x2f2f00, 8, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 12, 24, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x595b1b, 24, 28, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb8b800, 28, 32, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x74745d, 32, 36, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 36, 48, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xffffff, 48, 52, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 52, 56, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_5:
					setup_general_paint (0x5e5f00, 0, 4, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xbaba00, 4, 8, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x484800, 8, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 12, 24, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x5b5c00, 24, 28, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb8b800, 28, 32, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x6e6e57, 32, 36, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 36, 44, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xffffff, 44, 48, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 48, 52, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xffffff, 52, 56, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_6:
					setup_general_paint (0x868686, 0, 4, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb8b800, 4, 8, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xafaf00, 8, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x343416, 12, 16, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x868686, 16, 20, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x333400, 20, 24, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xa5a500, 24, 28, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb9b900, 28, 32, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x414224, 32, 36, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_7:
					setup_general_paint (0x868686, 0, 4, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x494900, 4, 8, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb2b200, 8, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb5b500, 12, 16, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x909000, 16, 20, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x939300, 20, 24, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb9b900, 24, 28, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0x777700, 28, 32, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW
			BORDER_COIN_ROW_8:
					setup_general_paint (0x868686, 0, 12, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb6b600, 12, 16, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb9b900, 16, 20, LOOP_BORDER_COIN_COLUMN)
					setup_general_paint (0xb3b300, 20, 24, LOOP_BORDER_COIN_COLUMN)
					j UPDATE_BORDER_COIN_ROW

    	UPDATE_BORDER_COIN_ROW:				# Update row value
    	    	addi $s2, $s2, row_increment
	        	j LOOP_BORDER_COIN_ROW

    	# FOR LOOP: (through column)
    	# Paints in column from $s3 to $s4 at some row
    	LOOP_BORDER_COIN_COLUMN: bge $s3, $s4, EXIT_LOOP_BORDER_COIN_COLUMN	# branch to UPDATE_BORDER_COIN_COL; if column index >= last column index to paint
        		addi $s1, $0, display_base_address			# Reinitialize t2; temporary address store
        		add $s1, $s1, $s2				# update to specific row from base address
        		add $s1, $s1, $s3				# update to specific column
        		addi $s1, $s1, 2888				# add specified offset
                		sw $s0, ($s1)					# paint in value

        		# Updates for loop index
        		addi $s3, $s3, column_increment			# t4 += row_increment
        		j LOOP_BORDER_COIN_COLUMN				# repeats LOOP_BORDER_COIN_ROW
	    EXIT_LOOP_BORDER_COIN_COLUMN:
		        jr $ra

    	# EXIT FUNCTION
       	EXIT_PAINT_BORDER_COIN:
        		# Restore used registers
	    		pop_reg_from_stack ($s4)
	    		pop_reg_from_stack ($s3)
	    		pop_reg_from_stack ($s2)
	    		pop_reg_from_stack ($s1)
	    		pop_reg_from_stack ($s0)
        		pop_reg_from_stack ($ra)
        		jr $ra						# return to previous instruction
